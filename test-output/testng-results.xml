<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="87" passed="83" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-07T06:16:54Z" name="Suite" finished-at="2021-12-07T07:53:30Z" duration-ms="5795858">
    <groups>
    </groups>
    <test started-at="2021-12-07T06:16:54Z" name="TestName" finished-at="2021-12-07T07:53:30Z" duration-ms="5795858">
      <class name="testcases.CurrencyManagement">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:42:08Z" name="setUp" finished-at="2021-12-07T12:42:18Z" duration-ms="9861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:42:18Z" name="beforeMethod" finished-at="2021-12-07T12:42:18Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.BasecurrencyDuplicateValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="BasecurrencyDuplicateValidation()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:42:18Z" name="BasecurrencyDuplicateValidation" finished-at="2021-12-07T12:42:52Z" duration-ms="33836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BasecurrencyDuplicateValidation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:42:52Z" name="reportWrapUp" finished-at="2021-12-07T12:42:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BasecurrencyDuplicateValidation status=SUCCESS method=CurrencyManagement.BasecurrencyDuplicateValidation()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.BasecurrencyDuplicateValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="SourcecurrencyDuplicateValidation()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:42:52Z" name="SourcecurrencyDuplicateValidation" finished-at="2021-12-07T12:43:47Z" duration-ms="55400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SourcecurrencyDuplicateValidation -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:42:52Z" name="beforeMethod" finished-at="2021-12-07T12:42:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.SourcecurrencyDuplicateValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewCurrencyAndDelete()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:43:47Z" name="addNewCurrencyAndDelete" finished-at="2021-12-07T12:44:40Z" duration-ms="53055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewCurrencyAndDelete -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:43:47Z" name="reportWrapUp" finished-at="2021-12-07T12:43:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SourcecurrencyDuplicateValidation status=SUCCESS method=CurrencyManagement.SourcecurrencyDuplicateValidation()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.SourcecurrencyDuplicateValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:43:47Z" name="beforeMethod" finished-at="2021-12-07T12:43:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.addNewCurrencyAndDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:44:40Z" name="reportWrapUp" finished-at="2021-12-07T12:44:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewCurrencyAndDelete status=SUCCESS method=CurrencyManagement.addNewCurrencyAndDelete()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.addNewCurrencyAndDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:44:40Z" name="beforeMethod" finished-at="2021-12-07T12:44:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.currencyValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="currencyValidationCheck()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:44:40Z" name="currencyValidationCheck" finished-at="2021-12-07T12:46:34Z" duration-ms="113694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currencyValidationCheck -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:46:34Z" name="reportWrapUp" finished-at="2021-12-07T12:46:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=currencyValidationCheck status=SUCCESS method=CurrencyManagement.currencyValidationCheck()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CurrencyManagement.currencyValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CurrencyManagement@4f67eb2a]" started-at="2021-12-07T12:46:34Z" name="closeBrowser" finished-at="2021-12-07T12:46:35Z" duration-ms="742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.CurrencyManagement -->
      <class name="testcases.Location">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:01:53Z" name="setUp" finished-at="2021-12-07T13:02:03Z" duration-ms="9712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addParentLocation()[pri:1, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:02:03Z" name="addParentLocation" finished-at="2021-12-07T13:02:40Z" duration-ms="37610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addParentLocation -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:02:03Z" name="beforeMethod" finished-at="2021-12-07T13:02:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Location.addParentLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:02:40Z" name="beforeMethod" finished-at="2021-12-07T13:02:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Location.addChildLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addChildLocation()[pri:2, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:02:40Z" name="addChildLocation" finished-at="2021-12-07T13:03:45Z" duration-ms="64966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addChildLocation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:02:40Z" name="reportWrapUp" finished-at="2021-12-07T13:02:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addParentLocation status=SUCCESS method=Location.addParentLocation()[pri:1, instance:testcases.Location@68e965f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Location.addParentLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:03:45Z" name="reportWrapUp" finished-at="2021-12-07T13:03:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addChildLocation status=SUCCESS method=Location.addChildLocation()[pri:2, instance:testcases.Location@68e965f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Location.addChildLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:03:45Z" name="beforeMethod" finished-at="2021-12-07T13:03:45Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Location.editLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editLocation()[pri:3, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:03:45Z" name="editLocation" finished-at="2021-12-07T13:05:03Z" depends-on-methods="testcases.Location.addParentLocation" duration-ms="77146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editLocation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:05:03Z" name="reportWrapUp" finished-at="2021-12-07T13:05:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editLocation status=SUCCESS method=Location.editLocation()[pri:3, instance:testcases.Location@68e965f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Location.editLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:05:03Z" name="beforeMethod" finished-at="2021-12-07T13:05:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Location.LocationListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LocationListing()[pri:4, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:05:03Z" name="LocationListing" finished-at="2021-12-07T13:05:55Z" depends-on-methods="testcases.Location.addParentLocation" duration-ms="52220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LocationListing -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:05:55Z" name="closeBrowser" finished-at="2021-12-07T13:05:56Z" duration-ms="729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Location@68e965f5]" started-at="2021-12-07T13:05:55Z" name="reportWrapUp" finished-at="2021-12-07T13:05:55Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LocationListing status=SUCCESS method=Location.LocationListing()[pri:4, instance:testcases.Location@68e965f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Location.LocationListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.Location -->
      <class name="testcases.Break">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:49:02Z" name="setUp" finished-at="2021-12-07T11:49:12Z" duration-ms="9516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="AddBreakValidationCheck()[pri:1, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:49:12Z" name="AddBreakValidationCheck" finished-at="2021-12-07T11:50:04Z" duration-ms="51866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddBreakValidationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:49:12Z" name="beforeMethod" finished-at="2021-12-07T11:49:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Break.AddBreakValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:50:04Z" name="reportWrapUp" finished-at="2021-12-07T11:50:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddBreakValidationCheck status=SUCCESS method=Break.AddBreakValidationCheck()[pri:1, instance:testcases.Break@6bf0219d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Break.AddBreakValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="AddBreak()[pri:2, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:50:04Z" name="AddBreak" finished-at="2021-12-07T11:51:02Z" duration-ms="57728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddBreak -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:50:04Z" name="beforeMethod" finished-at="2021-12-07T11:50:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Break.AddBreak()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:51:02Z" name="beforeMethod" finished-at="2021-12-07T11:51:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Break.EditBreak()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:51:02Z" name="reportWrapUp" finished-at="2021-12-07T11:51:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddBreak status=SUCCESS method=Break.AddBreak()[pri:2, instance:testcases.Break@6bf0219d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Break.AddBreak()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="EditBreak()[pri:3, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:51:02Z" name="EditBreak" finished-at="2021-12-07T11:51:58Z" duration-ms="56564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditBreak -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:51:58Z" name="reportWrapUp" finished-at="2021-12-07T11:51:58Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditBreak status=SUCCESS method=Break.EditBreak()[pri:3, instance:testcases.Break@6bf0219d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Break.EditBreak()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Break@6bf0219d]" started-at="2021-12-07T11:51:58Z" name="closeBrowser" finished-at="2021-12-07T11:51:59Z" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Break -->
      <class name="testcases.Designation">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:51:11Z" name="setUp" finished-at="2021-12-07T12:51:19Z" duration-ms="8445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addDesignationValidationCheck()[pri:1, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:51:19Z" name="addDesignationValidationCheck" finished-at="2021-12-07T12:52:17Z" duration-ms="57935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDesignationValidationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:51:19Z" name="beforeMethod" finished-at="2021-12-07T12:51:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Designation.addDesignationValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:52:17Z" name="reportWrapUp" finished-at="2021-12-07T12:52:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDesignationValidationCheck status=SUCCESS method=Designation.addDesignationValidationCheck()[pri:1, instance:testcases.Designation@5f683daf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Designation.addDesignationValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:52:17Z" name="beforeMethod" finished-at="2021-12-07T12:52:17Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Designation.addDesignation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addDesignation()[pri:2, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:52:17Z" name="addDesignation" finished-at="2021-12-07T12:53:03Z" duration-ms="46147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDesignation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:53:03Z" name="reportWrapUp" finished-at="2021-12-07T12:53:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDesignation status=SUCCESS method=Designation.addDesignation()[pri:2, instance:testcases.Designation@5f683daf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Designation.addDesignation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="editDesignation()[pri:3, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:53:03Z" name="editDesignation" finished-at="2021-12-07T12:54:14Z" depends-on-methods="testcases.Designation.addDesignation" duration-ms="70700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editDesignation -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:53:03Z" name="beforeMethod" finished-at="2021-12-07T12:53:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Designation.editDesignation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:54:14Z" name="beforeMethod" finished-at="2021-12-07T12:54:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Designation.designationListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="designationListing()[pri:4, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:54:14Z" name="designationListing" finished-at="2021-12-07T12:55:37Z" depends-on-methods="testcases.Designation.addDesignation" duration-ms="83146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- designationListing -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:54:14Z" name="reportWrapUp" finished-at="2021-12-07T12:54:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editDesignation status=SUCCESS method=Designation.editDesignation()[pri:3, instance:testcases.Designation@5f683daf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Designation.editDesignation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:55:37Z" name="reportWrapUp" finished-at="2021-12-07T12:55:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=designationListing status=SUCCESS method=Designation.designationListing()[pri:4, instance:testcases.Designation@5f683daf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Designation.designationListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Designation@5f683daf]" started-at="2021-12-07T12:55:37Z" name="closeBrowser" finished-at="2021-12-07T12:55:38Z" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Designation -->
      <class name="testcases.Question">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:16:21Z" name="setUp" finished-at="2021-12-07T13:16:30Z" duration-ms="9866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addQuestion()[pri:2, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:16:30Z" name="addQuestion" finished-at="2021-12-07T13:17:06Z" duration-ms="35452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addQuestion -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:16:30Z" name="beforeMethod" finished-at="2021-12-07T13:16:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Question.addQuestion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editQuestion()[pri:3, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:17:06Z" name="editQuestion" finished-at="2021-12-07T13:18:12Z" duration-ms="66194" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Question Name -  element not clickable]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Question Name -  element not clickable
	at org.testng.Assert.fail(Assert.java:94)
	at utils.WebBasePage.click(WebBasePage.java:99)
	at pageobjects.QuestionPage.clickQuestionName(QuestionPage.java:175)
	at Action.QuestionAction.editCreatedQuestion(QuestionAction.java:56)
	at testcases.Question.editQuestion(Question.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editQuestion -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:17:06Z" name="reportWrapUp" finished-at="2021-12-07T13:17:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addQuestion status=SUCCESS method=Question.addQuestion()[pri:2, instance:testcases.Question@7e9131d5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Question.addQuestion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:17:06Z" name="beforeMethod" finished-at="2021-12-07T13:17:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Question.editQuestion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:18:12Z" name="reportWrapUp" finished-at="2021-12-07T13:18:12Z" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editQuestion status=FAILURE method=Question.editQuestion()[pri:3, instance:testcases.Question@7e9131d5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Question.editQuestion()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:18:12Z" name="beforeMethod" finished-at="2021-12-07T13:18:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Question.priorityListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="priorityListing()[pri:4, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:18:12Z" name="priorityListing" finished-at="2021-12-07T13:19:34Z" duration-ms="82056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priorityListing -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:19:34Z" name="closeBrowser" finished-at="2021-12-07T13:19:35Z" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Question@7e9131d5]" started-at="2021-12-07T13:19:34Z" name="reportWrapUp" finished-at="2021-12-07T13:19:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=priorityListing status=SUCCESS method=Question.priorityListing()[pri:4, instance:testcases.Question@7e9131d5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Question.priorityListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.Question -->
      <class name="testcases.Announcement">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:46:54Z" name="setUp" finished-at="2021-12-07T11:47:14Z" duration-ms="20030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:47:14Z" name="beforeMethod" finished-at="2021-12-07T11:47:15Z" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Announcement.ValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidationCheck()[pri:1, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:47:15Z" name="ValidationCheck" finished-at="2021-12-07T11:48:02Z" duration-ms="47254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidationCheck -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:48:02Z" name="reportWrapUp" finished-at="2021-12-07T11:48:02Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidationCheck status=SUCCESS method=Announcement.ValidationCheck()[pri:1, instance:testcases.Announcement@3cc1435c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Announcement.ValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="AddSearchDeleteAnnouncement()[pri:2, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:48:02Z" name="AddSearchDeleteAnnouncement" finished-at="2021-12-07T11:49:01Z" duration-ms="59615" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[clickCheckBox -  element not clickable]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: clickCheckBox -  element not clickable
	at org.testng.Assert.fail(Assert.java:94)
	at utils.WebBasePage.click(WebBasePage.java:99)
	at pageobjects.AnnouncementPage.SelectSingleCheckBox(AnnouncementPage.java:173)
	at Action.AnnouncementAction.AddAnnouncement(AnnouncementAction.java:47)
	at testcases.Announcement.AddSearchDeleteAnnouncement(Announcement.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddSearchDeleteAnnouncement -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:48:02Z" name="beforeMethod" finished-at="2021-12-07T11:48:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Announcement.AddSearchDeleteAnnouncement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:49:01Z" name="reportWrapUp" finished-at="2021-12-07T11:49:02Z" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddSearchDeleteAnnouncement status=FAILURE method=Announcement.AddSearchDeleteAnnouncement()[pri:2, instance:testcases.Announcement@3cc1435c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Announcement.AddSearchDeleteAnnouncement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T11:49:02Z" name="closeBrowser" finished-at="2021-12-07T11:49:02Z" duration-ms="778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="close()[pri:0, instance:testcases.Announcement@3cc1435c]" started-at="2021-12-07T13:23:30Z" name="close" finished-at="2021-12-07T13:23:31Z" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testcases.Announcement -->
      <class name="testcases.UserTitle">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:29:42Z" name="setUp" finished-at="2021-12-07T12:29:51Z" duration-ms="8911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:29:51Z" name="beforeMethod" finished-at="2021-12-07T12:29:51Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.UserTitle.addUserTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addUserTitle()[pri:2, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:29:51Z" name="addUserTitle" finished-at="2021-12-07T12:30:22Z" duration-ms="30667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addUserTitle -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:30:22Z" name="reportWrapUp" finished-at="2021-12-07T12:30:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addUserTitle status=SUCCESS method=UserTitle.addUserTitle()[pri:2, instance:testcases.UserTitle@53aad5d5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.UserTitle.addUserTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:30:22Z" name="beforeMethod" finished-at="2021-12-07T12:30:22Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.UserTitle.EditUserTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="EditUserTitle()[pri:3, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:30:22Z" name="EditUserTitle" finished-at="2021-12-07T12:31:23Z" duration-ms="60848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditUserTitle -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:31:23Z" name="reportWrapUp" finished-at="2021-12-07T12:31:23Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditUserTitle status=SUCCESS method=UserTitle.EditUserTitle()[pri:3, instance:testcases.UserTitle@53aad5d5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.UserTitle.EditUserTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="StageListing()[pri:4, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:31:23Z" name="StageListing" finished-at="2021-12-07T12:32:36Z" duration-ms="73702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StageListing -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:31:23Z" name="beforeMethod" finished-at="2021-12-07T12:31:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.UserTitle.StageListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:32:36Z" name="reportWrapUp" finished-at="2021-12-07T12:32:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StageListing status=SUCCESS method=UserTitle.StageListing()[pri:4, instance:testcases.UserTitle@53aad5d5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.UserTitle.StageListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.UserTitle@53aad5d5]" started-at="2021-12-07T12:32:36Z" name="closeBrowser" finished-at="2021-12-07T12:32:37Z" duration-ms="731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.UserTitle -->
      <class name="testcases.Category">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:54:53Z" name="setUp" finished-at="2021-12-07T11:55:02Z" duration-ms="9007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:55:02Z" name="beforeMethod" finished-at="2021-12-07T11:55:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Category.addCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addCategory()[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:55:02Z" name="addCategory" finished-at="2021-12-07T11:55:32Z" duration-ms="30035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCategory -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:55:32Z" name="reportWrapUp" finished-at="2021-12-07T11:55:32Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCategory status=SUCCESS method=Category.addCategory()[pri:0, instance:testcases.Category@5552768b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Category.addCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="addCategoryValidationCheck()[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:55:32Z" name="addCategoryValidationCheck" finished-at="2021-12-07T11:56:18Z" duration-ms="46481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCategoryValidationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:55:32Z" name="beforeMethod" finished-at="2021-12-07T11:55:32Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Category.addCategoryValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:56:18Z" name="reportWrapUp" finished-at="2021-12-07T11:56:18Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addCategoryValidationCheck status=SUCCESS method=Category.addCategoryValidationCheck()[pri:0, instance:testcases.Category@5552768b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Category.addCategoryValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:56:18Z" name="beforeMethod" finished-at="2021-12-07T11:56:18Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Category.CategoryListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="CategoryListing()[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:56:18Z" name="CategoryListing" finished-at="2021-12-07T11:57:32Z" depends-on-methods="testcases.Category.addCategory" duration-ms="73678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CategoryListing -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:57:32Z" name="beforeMethod" finished-at="2021-12-07T11:57:32Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Category.editCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:57:32Z" name="reportWrapUp" finished-at="2021-12-07T11:57:32Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CategoryListing status=SUCCESS method=Category.CategoryListing()[pri:0, instance:testcases.Category@5552768b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Category.CategoryListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="editCategory()[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:57:32Z" name="editCategory" finished-at="2021-12-07T11:58:30Z" depends-on-methods="testcases.Category.addCategory" duration-ms="57928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editCategory -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:58:30Z" name="reportWrapUp" finished-at="2021-12-07T11:58:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editCategory status=SUCCESS method=Category.editCategory()[pri:0, instance:testcases.Category@5552768b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Category.editCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Category@5552768b]" started-at="2021-12-07T11:58:30Z" name="closeBrowser" finished-at="2021-12-07T11:58:31Z" duration-ms="1032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Category -->
      <class name="testcases.Greeting">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:55:38Z" name="setUp" finished-at="2021-12-07T12:55:47Z" duration-ms="9193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:55:47Z" name="validationCheck" finished-at="2021-12-07T12:56:14Z" duration-ms="27160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:55:47Z" name="beforeMethod" finished-at="2021-12-07T12:55:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Greeting.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:56:14Z" name="beforeMethod" finished-at="2021-12-07T12:56:14Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Greeting.addGreeting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:56:14Z" name="reportWrapUp" finished-at="2021-12-07T12:56:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Greeting.validationCheck()[pri:1, instance:testcases.Greeting@8317c52] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Greeting.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="addGreeting()[pri:2, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:56:14Z" name="addGreeting" finished-at="2021-12-07T12:57:26Z" duration-ms="72015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addGreeting -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:57:26Z" name="reportWrapUp" finished-at="2021-12-07T12:57:26Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addGreeting status=SUCCESS method=Greeting.addGreeting()[pri:2, instance:testcases.Greeting@8317c52] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Greeting.addGreeting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Greeting@8317c52]" started-at="2021-12-07T12:57:26Z" name="closeBrowser" finished-at="2021-12-07T12:57:27Z" duration-ms="685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Greeting -->
      <class name="testcases.Priority">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:12:40Z" name="setUp" finished-at="2021-12-07T13:12:49Z" duration-ms="8882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:12:49Z" name="beforeMethod" finished-at="2021-12-07T13:12:49Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Priority.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:12:49Z" name="validationCheck" finished-at="2021-12-07T13:13:23Z" duration-ms="34353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:13:23Z" name="beforeMethod" finished-at="2021-12-07T13:13:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Priority.addPriority()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:13:23Z" name="reportWrapUp" finished-at="2021-12-07T13:13:23Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Priority.validationCheck()[pri:1, instance:testcases.Priority@2cdd0d4b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Priority.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="addPriority()[pri:2, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:13:23Z" name="addPriority" finished-at="2021-12-07T13:14:07Z" duration-ms="44245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPriority -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:14:07Z" name="beforeMethod" finished-at="2021-12-07T13:14:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Priority.editPriority()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editPriority()[pri:3, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:14:07Z" name="editPriority" finished-at="2021-12-07T13:15:06Z" duration-ms="58174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editPriority -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:14:07Z" name="reportWrapUp" finished-at="2021-12-07T13:14:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPriority status=SUCCESS method=Priority.addPriority()[pri:2, instance:testcases.Priority@2cdd0d4b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Priority.addPriority()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="priorityListing()[pri:4, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:15:06Z" name="priorityListing" finished-at="2021-12-07T13:16:20Z" duration-ms="74108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priorityListing -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:15:06Z" name="beforeMethod" finished-at="2021-12-07T13:15:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Priority.priorityListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:15:06Z" name="reportWrapUp" finished-at="2021-12-07T13:15:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editPriority status=SUCCESS method=Priority.editPriority()[pri:3, instance:testcases.Priority@2cdd0d4b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Priority.editPriority()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:16:20Z" name="reportWrapUp" finished-at="2021-12-07T13:16:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=priorityListing status=SUCCESS method=Priority.priorityListing()[pri:4, instance:testcases.Priority@2cdd0d4b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Priority.priorityListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Priority@2cdd0d4b]" started-at="2021-12-07T13:16:20Z" name="closeBrowser" finished-at="2021-12-07T13:16:21Z" duration-ms="760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Priority -->
      <class name="testcases.Channel">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:58:31Z" name="setUp" finished-at="2021-12-07T11:58:39Z" duration-ms="8552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:58:39Z" name="beforeMethod" finished-at="2021-12-07T11:58:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Channel.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:58:39Z" name="validationCheck" finished-at="2021-12-07T11:59:13Z" duration-ms="33764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:59:13Z" name="reportWrapUp" finished-at="2021-12-07T11:59:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Channel.validationCheck()[pri:1, instance:testcases.Channel@3c947bc5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Channel.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="addChannel()[pri:2, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:59:13Z" name="addChannel" finished-at="2021-12-07T11:59:58Z" duration-ms="44933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addChannel -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:59:13Z" name="beforeMethod" finished-at="2021-12-07T11:59:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Channel.addChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:59:58Z" name="reportWrapUp" finished-at="2021-12-07T11:59:58Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addChannel status=SUCCESS method=Channel.addChannel()[pri:2, instance:testcases.Channel@3c947bc5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Channel.addChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:59:58Z" name="beforeMethod" finished-at="2021-12-07T11:59:58Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Channel.editChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editChannel()[pri:3, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T11:59:58Z" name="editChannel" finished-at="2021-12-07T12:00:57Z" depends-on-methods="testcases.Channel.addChannel" duration-ms="59144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editChannel -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T12:00:57Z" name="beforeMethod" finished-at="2021-12-07T12:00:57Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Channel.channellisting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T12:00:57Z" name="reportWrapUp" finished-at="2021-12-07T12:00:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editChannel status=SUCCESS method=Channel.editChannel()[pri:3, instance:testcases.Channel@3c947bc5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Channel.editChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="channellisting()[pri:4, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T12:00:57Z" name="channellisting" finished-at="2021-12-07T12:02:13Z" depends-on-methods="testcases.Channel.addChannel" duration-ms="76019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channellisting -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T12:02:13Z" name="reportWrapUp" finished-at="2021-12-07T12:02:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=channellisting status=SUCCESS method=Channel.channellisting()[pri:4, instance:testcases.Channel@3c947bc5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Channel.channellisting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Channel@3c947bc5]" started-at="2021-12-07T12:02:13Z" name="closeBrowser" finished-at="2021-12-07T12:02:14Z" duration-ms="766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Channel -->
      <class name="testcases.LoginAuthorization">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:32:37Z" name="setUp" finished-at="2021-12-07T12:32:47Z" duration-ms="10246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addLoginAuthorization()[pri:2, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:32:47Z" name="addLoginAuthorization" finished-at="2021-12-07T12:33:26Z" duration-ms="38832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addLoginAuthorization -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:32:47Z" name="beforeMethod" finished-at="2021-12-07T12:32:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginAuthorization.addLoginAuthorization()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:33:26Z" name="reportWrapUp" finished-at="2021-12-07T12:33:26Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addLoginAuthorization status=SUCCESS method=LoginAuthorization.addLoginAuthorization()[pri:2, instance:testcases.LoginAuthorization@46fa7c39] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.LoginAuthorization.addLoginAuthorization()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:33:26Z" name="beforeMethod" finished-at="2021-12-07T12:33:26Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginAuthorization.EditLoginAuthorization()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="EditLoginAuthorization()[pri:3, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:33:26Z" name="EditLoginAuthorization" finished-at="2021-12-07T12:34:31Z" duration-ms="64816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditLoginAuthorization -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:34:31Z" name="reportWrapUp" finished-at="2021-12-07T12:34:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditLoginAuthorization status=SUCCESS method=LoginAuthorization.EditLoginAuthorization()[pri:3, instance:testcases.LoginAuthorization@46fa7c39] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.LoginAuthorization.EditLoginAuthorization()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:34:31Z" name="beforeMethod" finished-at="2021-12-07T12:34:31Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginAuthorization.TripListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TripListing()[pri:4, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:34:31Z" name="TripListing" finished-at="2021-12-07T12:35:44Z" duration-ms="72770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TripListing -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:35:44Z" name="reportWrapUp" finished-at="2021-12-07T12:35:44Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TripListing status=SUCCESS method=LoginAuthorization.TripListing()[pri:4, instance:testcases.LoginAuthorization@46fa7c39] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.LoginAuthorization.TripListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.LoginAuthorization@46fa7c39]" started-at="2021-12-07T12:35:44Z" name="closeBrowser" finished-at="2021-12-07T12:35:45Z" duration-ms="697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.LoginAuthorization -->
      <class name="testcases.CompanyNotification">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:35:45Z" name="setUp" finished-at="2021-12-07T12:35:53Z" duration-ms="8613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:35:53Z" name="beforeMethod" finished-at="2021-12-07T12:35:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanyNotification.mainMultiCheckboxVerification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="mainMultiCheckboxVerification()[pri:1, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:35:53Z" name="mainMultiCheckboxVerification" finished-at="2021-12-07T12:36:50Z" duration-ms="56634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainMultiCheckboxVerification -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:36:50Z" name="beforeMethod" finished-at="2021-12-07T12:36:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanyNotification.moduleWiseCheckverification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="moduleWiseCheckverification()[pri:2, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:36:50Z" name="moduleWiseCheckverification" finished-at="2021-12-07T12:42:07Z" duration-ms="317661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- moduleWiseCheckverification -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:36:50Z" name="reportWrapUp" finished-at="2021-12-07T12:36:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mainMultiCheckboxVerification status=SUCCESS method=CompanyNotification.mainMultiCheckboxVerification()[pri:1, instance:testcases.CompanyNotification@1fb700ee] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanyNotification.mainMultiCheckboxVerification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:42:07Z" name="reportWrapUp" finished-at="2021-12-07T12:42:07Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=moduleWiseCheckverification status=SUCCESS method=CompanyNotification.moduleWiseCheckverification()[pri:2, instance:testcases.CompanyNotification@1fb700ee] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanyNotification.moduleWiseCheckverification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CompanyNotification@1fb700ee]" started-at="2021-12-07T12:42:07Z" name="closeBrowser" finished-at="2021-12-07T12:42:08Z" duration-ms="683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.CompanyNotification -->
      <class name="testcases.Skill">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:12:20Z" name="setUp" finished-at="2021-12-07T12:12:30Z" duration-ms="10083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:12:30Z" name="validationCheck" finished-at="2021-12-07T12:13:11Z" duration-ms="41436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:12:30Z" name="beforeMethod" finished-at="2021-12-07T12:12:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Skill.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:13:11Z" name="beforeMethod" finished-at="2021-12-07T12:13:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Skill.addSkill()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addSkill()[pri:2, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:13:11Z" name="addSkill" finished-at="2021-12-07T12:14:22Z" duration-ms="70668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSkill -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:13:11Z" name="reportWrapUp" finished-at="2021-12-07T12:13:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Skill.validationCheck()[pri:1, instance:testcases.Skill@c03cf28] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Skill.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:14:22Z" name="reportWrapUp" finished-at="2021-12-07T12:14:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addSkill status=SUCCESS method=Skill.addSkill()[pri:2, instance:testcases.Skill@c03cf28] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Skill.addSkill()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="EditSkill()[pri:3, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:14:22Z" name="EditSkill" finished-at="2021-12-07T12:15:25Z" duration-ms="63007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditSkill -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:14:22Z" name="beforeMethod" finished-at="2021-12-07T12:14:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Skill.EditSkill()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:15:25Z" name="reportWrapUp" finished-at="2021-12-07T12:15:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditSkill status=SUCCESS method=Skill.EditSkill()[pri:3, instance:testcases.Skill@c03cf28] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Skill.EditSkill()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:15:25Z" name="beforeMethod" finished-at="2021-12-07T12:15:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Skill.SkillListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="SkillListing()[pri:4, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:15:25Z" name="SkillListing" finished-at="2021-12-07T12:16:39Z" duration-ms="74394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SkillListing -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:16:39Z" name="reportWrapUp" finished-at="2021-12-07T12:16:39Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SkillListing status=SUCCESS method=Skill.SkillListing()[pri:4, instance:testcases.Skill@c03cf28] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Skill.SkillListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Skill@c03cf28]" started-at="2021-12-07T12:16:39Z" name="closeBrowser" finished-at="2021-12-07T12:16:40Z" duration-ms="892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Skill -->
      <class name="testcases.IndustryType">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:57:27Z" name="setUp" finished-at="2021-12-07T12:57:37Z" duration-ms="9495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addIndustryTypeValidation()[pri:1, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:57:37Z" name="addIndustryTypeValidation" finished-at="2021-12-07T12:58:12Z" duration-ms="35486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addIndustryTypeValidation -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:57:37Z" name="beforeMethod" finished-at="2021-12-07T12:57:37Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IndustryType.addIndustryTypeValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:58:12Z" name="reportWrapUp" finished-at="2021-12-07T12:58:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addIndustryTypeValidation status=SUCCESS method=IndustryType.addIndustryTypeValidation()[pri:1, instance:testcases.IndustryType@76f2bbc1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IndustryType.addIndustryTypeValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="addIndustryType()[pri:2, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:58:12Z" name="addIndustryType" finished-at="2021-12-07T12:59:06Z" duration-ms="53486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addIndustryType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:58:12Z" name="beforeMethod" finished-at="2021-12-07T12:58:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IndustryType.addIndustryType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:59:06Z" name="reportWrapUp" finished-at="2021-12-07T12:59:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addIndustryType status=SUCCESS method=IndustryType.addIndustryType()[pri:2, instance:testcases.IndustryType@76f2bbc1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IndustryType.addIndustryType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="editIndustryType()[pri:3, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:59:06Z" name="editIndustryType" finished-at="2021-12-07T13:00:22Z" duration-ms="76359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editIndustryType -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T12:59:06Z" name="beforeMethod" finished-at="2021-12-07T12:59:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IndustryType.editIndustryType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T13:00:22Z" name="reportWrapUp" finished-at="2021-12-07T13:00:22Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editIndustryType status=SUCCESS method=IndustryType.editIndustryType()[pri:3, instance:testcases.IndustryType@76f2bbc1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IndustryType.editIndustryType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T13:00:22Z" name="beforeMethod" finished-at="2021-12-07T13:00:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.IndustryType.IndustryTypeListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="IndustryTypeListing()[pri:4, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T13:00:22Z" name="IndustryTypeListing" finished-at="2021-12-07T13:01:52Z" duration-ms="90553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndustryTypeListing -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T13:01:52Z" name="closeBrowser" finished-at="2021-12-07T13:01:53Z" duration-ms="717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.IndustryType@76f2bbc1]" started-at="2021-12-07T13:01:52Z" name="reportWrapUp" finished-at="2021-12-07T13:01:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IndustryTypeListing status=SUCCESS method=IndustryType.IndustryTypeListing()[pri:4, instance:testcases.IndustryType@76f2bbc1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.IndustryType.IndustryTypeListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.IndustryType -->
      <class name="testcases.Shift">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:08:00Z" name="setUp" finished-at="2021-12-07T12:08:09Z" duration-ms="9103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:08:09Z" name="beforeMethod" finished-at="2021-12-07T12:08:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Shift.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:08:09Z" name="validationCheck" finished-at="2021-12-07T12:08:46Z" duration-ms="36901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:08:46Z" name="reportWrapUp" finished-at="2021-12-07T12:08:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Shift.validationCheck()[pri:1, instance:testcases.Shift@1356d4d4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Shift.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:08:46Z" name="beforeMethod" finished-at="2021-12-07T12:08:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Shift.addShiftFexible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addShiftFexible()[pri:2, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:08:46Z" name="addShiftFexible" finished-at="2021-12-07T12:10:03Z" duration-ms="77886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addShiftFexible -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:10:03Z" name="beforeMethod" finished-at="2021-12-07T12:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Shift.editShiftFexible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editShiftFexible()[pri:3, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:10:03Z" name="editShiftFexible" finished-at="2021-12-07T12:11:06Z" duration-ms="62374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editShiftFexible -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:10:03Z" name="reportWrapUp" finished-at="2021-12-07T12:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addShiftFexible status=SUCCESS method=Shift.addShiftFexible()[pri:2, instance:testcases.Shift@1356d4d4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Shift.addShiftFexible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:11:06Z" name="reportWrapUp" finished-at="2021-12-07T12:11:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editShiftFexible status=SUCCESS method=Shift.editShiftFexible()[pri:3, instance:testcases.Shift@1356d4d4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Shift.editShiftFexible()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:11:06Z" name="beforeMethod" finished-at="2021-12-07T12:11:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Shift.ServiceListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ServiceListing()[pri:4, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:11:06Z" name="ServiceListing" finished-at="2021-12-07T12:12:19Z" duration-ms="72907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceListing -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:12:19Z" name="reportWrapUp" finished-at="2021-12-07T12:12:19Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ServiceListing status=SUCCESS method=Shift.ServiceListing()[pri:4, instance:testcases.Shift@1356d4d4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Shift.ServiceListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Shift@1356d4d4]" started-at="2021-12-07T12:12:19Z" name="closeBrowser" finished-at="2021-12-07T12:12:20Z" duration-ms="873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Shift -->
      <class name="testcases.PaymentGateway">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:05:56Z" name="setUp" finished-at="2021-12-07T13:06:04Z" duration-ms="8837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addPaymentGateway()[pri:2, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:06:04Z" name="addPaymentGateway" finished-at="2021-12-07T13:07:09Z" duration-ms="64570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPaymentGateway -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:06:04Z" name="beforeMethod" finished-at="2021-12-07T13:06:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PaymentGateway.addPaymentGateway()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editPaymentGateway()[pri:3, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:07:09Z" name="editPaymentGateway" finished-at="2021-12-07T13:08:12Z" duration-ms="62871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editPaymentGateway -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:07:09Z" name="reportWrapUp" finished-at="2021-12-07T13:07:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPaymentGateway status=SUCCESS method=PaymentGateway.addPaymentGateway()[pri:2, instance:testcases.PaymentGateway@6c779568] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PaymentGateway.addPaymentGateway()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:07:09Z" name="beforeMethod" finished-at="2021-12-07T13:07:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.PaymentGateway.editPaymentGateway()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:08:12Z" name="closeBrowser" finished-at="2021-12-07T13:08:13Z" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.PaymentGateway@6c779568]" started-at="2021-12-07T13:08:12Z" name="reportWrapUp" finished-at="2021-12-07T13:08:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editPaymentGateway status=SUCCESS method=PaymentGateway.editPaymentGateway()[pri:3, instance:testcases.PaymentGateway@6c779568] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.PaymentGateway.editPaymentGateway()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.PaymentGateway -->
      <class name="testcases.Service">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:19:35Z" name="setUp" finished-at="2021-12-07T13:19:44Z" duration-ms="8411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:19:44Z" name="beforeMethod" finished-at="2021-12-07T13:19:44Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Service.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:19:44Z" name="validationCheck" finished-at="2021-12-07T13:20:20Z" duration-ms="36448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:20:20Z" name="reportWrapUp" finished-at="2021-12-07T13:20:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Service.validationCheck()[pri:1, instance:testcases.Service@2e1d27ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Service.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:20:20Z" name="beforeMethod" finished-at="2021-12-07T13:20:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Service.addService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addService()[pri:2, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:20:20Z" name="addService" finished-at="2021-12-07T13:21:11Z" duration-ms="50950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addService -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:21:11Z" name="beforeMethod" finished-at="2021-12-07T13:21:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Service.editService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editService()[pri:3, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:21:11Z" name="editService" finished-at="2021-12-07T13:22:14Z" duration-ms="63152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editService -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:21:11Z" name="reportWrapUp" finished-at="2021-12-07T13:21:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addService status=SUCCESS method=Service.addService()[pri:2, instance:testcases.Service@2e1d27ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Service.addService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ServiceListing()[pri:4, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:22:14Z" name="ServiceListing" finished-at="2021-12-07T13:23:29Z" duration-ms="75426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServiceListing -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:22:14Z" name="beforeMethod" finished-at="2021-12-07T13:22:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Service.ServiceListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:22:14Z" name="reportWrapUp" finished-at="2021-12-07T13:22:14Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editService status=SUCCESS method=Service.editService()[pri:3, instance:testcases.Service@2e1d27ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Service.editService()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:23:29Z" name="reportWrapUp" finished-at="2021-12-07T13:23:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ServiceListing status=SUCCESS method=Service.ServiceListing()[pri:4, instance:testcases.Service@2e1d27ba] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Service.ServiceListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Service@2e1d27ba]" started-at="2021-12-07T13:23:29Z" name="closeBrowser" finished-at="2021-12-07T13:23:30Z" duration-ms="749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Service -->
      <class name="testcases.CannedReply">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:51:59Z" name="setUp" finished-at="2021-12-07T11:52:08Z" duration-ms="9090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:52:08Z" name="beforeMethod" finished-at="2021-12-07T11:52:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CannedReply.ValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidationCheck()[pri:1, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:52:08Z" name="ValidationCheck" finished-at="2021-12-07T11:52:46Z" duration-ms="38304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidationCheck -->
        <test-method signature="AddCannedReply()[pri:2, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:52:46Z" name="AddCannedReply" finished-at="2021-12-07T11:53:48Z" duration-ms="61384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddCannedReply -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:52:46Z" name="reportWrapUp" finished-at="2021-12-07T11:52:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidationCheck status=SUCCESS method=CannedReply.ValidationCheck()[pri:1, instance:testcases.CannedReply@dd0c991] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CannedReply.ValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:52:46Z" name="beforeMethod" finished-at="2021-12-07T11:52:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CannedReply.AddCannedReply()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:53:48Z" name="reportWrapUp" finished-at="2021-12-07T11:53:48Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddCannedReply status=SUCCESS method=CannedReply.AddCannedReply()[pri:2, instance:testcases.CannedReply@dd0c991] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CannedReply.AddCannedReply()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:53:48Z" name="beforeMethod" finished-at="2021-12-07T11:53:48Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CannedReply.SearchActiveInactiveDeleteCannedReply()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="SearchActiveInactiveDeleteCannedReply()[pri:3, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:53:48Z" name="SearchActiveInactiveDeleteCannedReply" finished-at="2021-12-07T11:54:52Z" depends-on-methods="testcases.CannedReply.AddCannedReply" duration-ms="64080" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Confirmation popup -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Confirmation popup -  element not present
	at org.testng.Assert.fail(Assert.java:94)
	at utils.WebBasePage.click(WebBasePage.java:106)
	at pageobjects.CannedReplyPage.ActiveToInActive(CannedReplyPage.java:179)
	at Action.CannedReplyAction.ActiveInactive(CannedReplyAction.java:60)
	at testcases.CannedReply.SearchActiveInactiveDeleteCannedReply(CannedReply.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchActiveInactiveDeleteCannedReply -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:54:52Z" name="reportWrapUp" finished-at="2021-12-07T11:54:52Z" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchActiveInactiveDeleteCannedReply status=FAILURE method=CannedReply.SearchActiveInactiveDeleteCannedReply()[pri:3, instance:testcases.CannedReply@dd0c991] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CannedReply.SearchActiveInactiveDeleteCannedReply()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.CannedReply@dd0c991]" started-at="2021-12-07T11:54:52Z" name="closeBrowser" finished-at="2021-12-07T11:54:53Z" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.CannedReply -->
      <class name="testcases.Emailtemplate">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:02:14Z" name="setUp" finished-at="2021-12-07T12:02:24Z" duration-ms="9977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:02:24Z" name="beforeMethod" finished-at="2021-12-07T12:02:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Emailtemplate.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:02:24Z" name="validationCheck" finished-at="2021-12-07T12:03:55Z" duration-ms="91317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method signature="addEmailTemplate()[pri:2, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:03:55Z" name="addEmailTemplate" finished-at="2021-12-07T12:04:45Z" duration-ms="49958" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addEmailTemplate -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:03:55Z" name="reportWrapUp" finished-at="2021-12-07T12:03:55Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Emailtemplate.validationCheck()[pri:1, instance:testcases.Emailtemplate@55f616cf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Emailtemplate.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:03:55Z" name="beforeMethod" finished-at="2021-12-07T12:03:55Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Emailtemplate.addEmailTemplate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:04:45Z" name="reportWrapUp" finished-at="2021-12-07T12:04:45Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addEmailTemplate status=SUCCESS method=Emailtemplate.addEmailTemplate()[pri:2, instance:testcases.Emailtemplate@55f616cf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Emailtemplate.addEmailTemplate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:04:45Z" name="beforeMethod" finished-at="2021-12-07T12:04:45Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Emailtemplate.addAdvancedEmailTemplate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addAdvancedEmailTemplate()[pri:5, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:04:45Z" name="addAdvancedEmailTemplate" finished-at="2021-12-07T12:05:34Z" duration-ms="48779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAdvancedEmailTemplate -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:05:34Z" name="reportWrapUp" finished-at="2021-12-07T12:05:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAdvancedEmailTemplate status=SUCCESS method=Emailtemplate.addAdvancedEmailTemplate()[pri:5, instance:testcases.Emailtemplate@55f616cf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Emailtemplate.addAdvancedEmailTemplate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="editEmailTemplate()[pri:3, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:05:34Z" name="editEmailTemplate" finished-at="2021-12-07T12:06:35Z" depends-on-methods="testcases.Emailtemplate.addEmailTemplate" duration-ms="60927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editEmailTemplate -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:05:34Z" name="beforeMethod" finished-at="2021-12-07T12:05:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Emailtemplate.editEmailTemplate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:06:35Z" name="reportWrapUp" finished-at="2021-12-07T12:06:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editEmailTemplate status=SUCCESS method=Emailtemplate.editEmailTemplate()[pri:3, instance:testcases.Emailtemplate@55f616cf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Emailtemplate.editEmailTemplate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="emailTemplateListing()[pri:4, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:06:35Z" name="emailTemplateListing" finished-at="2021-12-07T12:07:59Z" depends-on-methods="testcases.Emailtemplate.addEmailTemplate" duration-ms="83800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailTemplateListing -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:06:35Z" name="beforeMethod" finished-at="2021-12-07T12:06:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Emailtemplate.emailTemplateListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:07:59Z" name="closeBrowser" finished-at="2021-12-07T12:08:00Z" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Emailtemplate@55f616cf]" started-at="2021-12-07T12:07:59Z" name="reportWrapUp" finished-at="2021-12-07T12:07:59Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emailTemplateListing status=SUCCESS method=Emailtemplate.emailTemplateListing()[pri:4, instance:testcases.Emailtemplate@55f616cf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Emailtemplate.emailTemplateListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.Emailtemplate -->
      <class name="testcases.Stage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:16:40Z" name="setUp" finished-at="2021-12-07T12:16:50Z" duration-ms="10333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:16:50Z" name="beforeMethod" finished-at="2021-12-07T12:16:50Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Stage.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:16:50Z" name="validationCheck" finished-at="2021-12-07T12:18:21Z" duration-ms="90743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:18:21Z" name="beforeMethod" finished-at="2021-12-07T12:18:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Stage.addStage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addStage()[pri:2, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:18:21Z" name="addStage" finished-at="2021-12-07T12:19:56Z" duration-ms="94320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addStage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:18:21Z" name="reportWrapUp" finished-at="2021-12-07T12:18:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Stage.validationCheck()[pri:1, instance:testcases.Stage@1329eff] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Stage.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:19:56Z" name="reportWrapUp" finished-at="2021-12-07T12:19:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addStage status=SUCCESS method=Stage.addStage()[pri:2, instance:testcases.Stage@1329eff] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Stage.addStage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:19:56Z" name="beforeMethod" finished-at="2021-12-07T12:19:56Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Stage.EditStage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="EditStage()[pri:3, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:19:56Z" name="EditStage" finished-at="2021-12-07T12:21:03Z" duration-ms="67186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditStage -->
        <test-method signature="StageListing()[pri:4, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:21:03Z" name="StageListing" finished-at="2021-12-07T12:22:19Z" duration-ms="76225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StageListing -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:21:03Z" name="beforeMethod" finished-at="2021-12-07T12:21:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Stage.StageListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:21:03Z" name="reportWrapUp" finished-at="2021-12-07T12:21:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditStage status=SUCCESS method=Stage.EditStage()[pri:3, instance:testcases.Stage@1329eff] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Stage.EditStage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:22:19Z" name="closeBrowser" finished-at="2021-12-07T12:22:20Z" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Stage@1329eff]" started-at="2021-12-07T12:22:19Z" name="reportWrapUp" finished-at="2021-12-07T12:22:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=StageListing status=SUCCESS method=Stage.StageListing()[pri:4, instance:testcases.Stage@1329eff] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Stage.StageListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.Stage -->
      <class name="testcases.TaxAndDiscount">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:22:20Z" name="setUp" finished-at="2021-12-07T12:22:28Z" duration-ms="8745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:22:28Z" name="beforeMethod" finished-at="2021-12-07T12:22:28Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TaxAndDiscount.ValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="ValidationCheck()[pri:1, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:22:28Z" name="ValidationCheck" finished-at="2021-12-07T12:23:53Z" duration-ms="84893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:23:53Z" name="beforeMethod" finished-at="2021-12-07T12:23:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TaxAndDiscount.AddTaxAndDiscount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:23:53Z" name="reportWrapUp" finished-at="2021-12-07T12:23:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidationCheck status=SUCCESS method=TaxAndDiscount.ValidationCheck()[pri:1, instance:testcases.TaxAndDiscount@6497b078] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TaxAndDiscount.ValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="AddTaxAndDiscount()[pri:2, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:23:53Z" name="AddTaxAndDiscount" finished-at="2021-12-07T12:24:46Z" duration-ms="52493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddTaxAndDiscount -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:24:46Z" name="reportWrapUp" finished-at="2021-12-07T12:24:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddTaxAndDiscount status=SUCCESS method=TaxAndDiscount.AddTaxAndDiscount()[pri:2, instance:testcases.TaxAndDiscount@6497b078] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TaxAndDiscount.AddTaxAndDiscount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="ActiveAndINactive()[pri:3, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:24:46Z" name="ActiveAndINactive" finished-at="2021-12-07T12:25:55Z" duration-ms="69485" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ok Button -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ok Button -  element not present
	at org.testng.Assert.fail(Assert.java:94)
	at utils.WebBasePage.click(WebBasePage.java:106)
	at pageobjects.TaxAndDiscountPage.okConfirmButton(TaxAndDiscountPage.java:211)
	at Action.TaxAndDiscountAction.ActiveToInactiveTax(TaxAndDiscountAction.java:61)
	at testcases.TaxAndDiscount.ActiveAndINactive(TaxAndDiscount.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActiveAndINactive -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:24:46Z" name="beforeMethod" finished-at="2021-12-07T12:24:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TaxAndDiscount.ActiveAndINactive()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:25:55Z" name="reportWrapUp" finished-at="2021-12-07T12:25:55Z" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ActiveAndINactive status=FAILURE method=TaxAndDiscount.ActiveAndINactive()[pri:3, instance:testcases.TaxAndDiscount@6497b078] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TaxAndDiscount.ActiveAndINactive()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.TaxAndDiscount@6497b078]" started-at="2021-12-07T12:25:55Z" name="closeBrowser" finished-at="2021-12-07T12:25:56Z" duration-ms="679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.TaxAndDiscount -->
      <class name="testcases.Phase">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:08:13Z" name="setUp" finished-at="2021-12-07T13:08:24Z" duration-ms="11342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:08:24Z" name="validationCheck" finished-at="2021-12-07T13:09:17Z" duration-ms="52783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:08:24Z" name="beforeMethod" finished-at="2021-12-07T13:08:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Phase.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:09:17Z" name="reportWrapUp" finished-at="2021-12-07T13:09:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Phase.validationCheck()[pri:1, instance:testcases.Phase@f381794] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Phase.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="addPhase()[pri:2, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:09:17Z" name="addPhase" finished-at="2021-12-07T13:10:09Z" duration-ms="52227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPhase -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:09:17Z" name="beforeMethod" finished-at="2021-12-07T13:09:17Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Phase.addPhase()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:10:09Z" name="reportWrapUp" finished-at="2021-12-07T13:10:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPhase status=SUCCESS method=Phase.addPhase()[pri:2, instance:testcases.Phase@f381794] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Phase.addPhase()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="editPhase()[pri:3, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:10:09Z" name="editPhase" finished-at="2021-12-07T13:11:10Z" duration-ms="61337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editPhase -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:10:09Z" name="beforeMethod" finished-at="2021-12-07T13:10:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Phase.editPhase()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:11:10Z" name="reportWrapUp" finished-at="2021-12-07T13:11:10Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editPhase status=SUCCESS method=Phase.editPhase()[pri:3, instance:testcases.Phase@f381794] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Phase.editPhase()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:11:10Z" name="beforeMethod" finished-at="2021-12-07T13:11:10Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Phase.phaseListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="phaseListing()[pri:4, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:11:10Z" name="phaseListing" finished-at="2021-12-07T13:12:39Z" duration-ms="89113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- phaseListing -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:12:39Z" name="closeBrowser" finished-at="2021-12-07T13:12:40Z" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Phase@f381794]" started-at="2021-12-07T13:12:39Z" name="reportWrapUp" finished-at="2021-12-07T13:12:39Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=phaseListing status=SUCCESS method=Phase.phaseListing()[pri:4, instance:testcases.Phase@f381794] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Phase.phaseListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.Phase -->
      <class name="testcases.Department">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:46:35Z" name="setUp" finished-at="2021-12-07T12:46:44Z" duration-ms="9741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:46:44Z" name="beforeMethod" finished-at="2021-12-07T12:46:44Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Department.addDepartmentValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addDepartmentValidationCheck()[pri:1, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:46:44Z" name="addDepartmentValidationCheck" finished-at="2021-12-07T12:48:07Z" duration-ms="82444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDepartmentValidationCheck -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:48:07Z" name="reportWrapUp" finished-at="2021-12-07T12:48:07Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDepartmentValidationCheck status=SUCCESS method=Department.addDepartmentValidationCheck()[pri:1, instance:testcases.Department@4a668b6e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Department.addDepartmentValidationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="addDepartment()[pri:2, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:48:07Z" name="addDepartment" finished-at="2021-12-07T12:49:07Z" duration-ms="60018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDepartment -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:48:07Z" name="beforeMethod" finished-at="2021-12-07T12:48:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Department.addDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:49:07Z" name="reportWrapUp" finished-at="2021-12-07T12:49:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDepartment status=SUCCESS method=Department.addDepartment()[pri:2, instance:testcases.Department@4a668b6e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Department.addDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:49:07Z" name="beforeMethod" finished-at="2021-12-07T12:49:07Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Department.editDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editDepartment()[pri:3, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:49:07Z" name="editDepartment" finished-at="2021-12-07T12:49:59Z" depends-on-methods="testcases.Department.addDepartment" duration-ms="51755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editDepartment -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:49:59Z" name="reportWrapUp" finished-at="2021-12-07T12:49:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editDepartment status=SUCCESS method=Department.editDepartment()[pri:3, instance:testcases.Department@4a668b6e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Department.editDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:49:59Z" name="beforeMethod" finished-at="2021-12-07T12:49:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Department.departmentListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="departmentListing()[pri:4, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:49:59Z" name="departmentListing" finished-at="2021-12-07T12:51:10Z" depends-on-methods="testcases.Department.addDepartment" duration-ms="71456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- departmentListing -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:51:10Z" name="reportWrapUp" finished-at="2021-12-07T12:51:10Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=departmentListing status=SUCCESS method=Department.departmentListing()[pri:4, instance:testcases.Department@4a668b6e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Department.departmentListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Department@4a668b6e]" started-at="2021-12-07T12:51:10Z" name="closeBrowser" finished-at="2021-12-07T12:51:11Z" duration-ms="731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Department -->
      <class name="testcases.Trip">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:25:56Z" name="setUp" finished-at="2021-12-07T12:26:05Z" duration-ms="8419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:26:05Z" name="beforeMethod" finished-at="2021-12-07T12:26:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Trip.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationCheck()[pri:1, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:26:05Z" name="validationCheck" finished-at="2021-12-07T12:26:40Z" duration-ms="35086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationCheck -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:26:40Z" name="reportWrapUp" finished-at="2021-12-07T12:26:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validationCheck status=SUCCESS method=Trip.validationCheck()[pri:1, instance:testcases.Trip@41c2284a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Trip.validationCheck()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:26:40Z" name="beforeMethod" finished-at="2021-12-07T12:26:40Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Trip.addTrip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addTrip()[pri:2, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:26:40Z" name="addTrip" finished-at="2021-12-07T12:27:27Z" duration-ms="46845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTrip -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:27:27Z" name="beforeMethod" finished-at="2021-12-07T12:27:27Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Trip.EditTrip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:27:27Z" name="reportWrapUp" finished-at="2021-12-07T12:27:27Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addTrip status=SUCCESS method=Trip.addTrip()[pri:2, instance:testcases.Trip@41c2284a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Trip.addTrip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="EditTrip()[pri:3, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:27:27Z" name="EditTrip" finished-at="2021-12-07T12:28:30Z" duration-ms="63526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditTrip -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:28:30Z" name="beforeMethod" finished-at="2021-12-07T12:28:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.Trip.TripListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:28:30Z" name="reportWrapUp" finished-at="2021-12-07T12:28:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditTrip status=SUCCESS method=Trip.EditTrip()[pri:3, instance:testcases.Trip@41c2284a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Trip.EditTrip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="TripListing()[pri:4, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:28:30Z" name="TripListing" finished-at="2021-12-07T12:29:42Z" duration-ms="71564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TripListing -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:29:42Z" name="reportWrapUp" finished-at="2021-12-07T12:29:42Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TripListing status=SUCCESS method=Trip.TripListing()[pri:4, instance:testcases.Trip@41c2284a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.Trip.TripListing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testcases.Trip@41c2284a]" started-at="2021-12-07T12:29:42Z" name="closeBrowser" finished-at="2021-12-07T12:29:42Z" duration-ms="717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testcases.Trip -->
    </test> <!-- TestName -->
  </suite> <!-- Suite -->
</testng-results>
